// +build !ignore_autogenerated

// Copyright 2019-2021 The Liqo Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceOffloading) DeepCopyInto(out *NamespaceOffloading) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceOffloading.
func (in *NamespaceOffloading) DeepCopy() *NamespaceOffloading {
	if in == nil {
		return nil
	}
	out := new(NamespaceOffloading)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NamespaceOffloading) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceOffloadingList) DeepCopyInto(out *NamespaceOffloadingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NamespaceOffloading, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceOffloadingList.
func (in *NamespaceOffloadingList) DeepCopy() *NamespaceOffloadingList {
	if in == nil {
		return nil
	}
	out := new(NamespaceOffloadingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NamespaceOffloadingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceOffloadingSpec) DeepCopyInto(out *NamespaceOffloadingSpec) {
	*out = *in
	in.ClusterSelector.DeepCopyInto(&out.ClusterSelector)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceOffloadingSpec.
func (in *NamespaceOffloadingSpec) DeepCopy() *NamespaceOffloadingSpec {
	if in == nil {
		return nil
	}
	out := new(NamespaceOffloadingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceOffloadingStatus) DeepCopyInto(out *NamespaceOffloadingStatus) {
	*out = *in
	if in.RemoteNamespacesConditions != nil {
		in, out := &in.RemoteNamespacesConditions, &out.RemoteNamespacesConditions
		*out = make(map[string]RemoteNamespaceConditions, len(*in))
		for key, val := range *in {
			var outVal []RemoteNamespaceCondition
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make(RemoteNamespaceConditions, len(*in))
				for i := range *in {
					(*in)[i].DeepCopyInto(&(*out)[i])
				}
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceOffloadingStatus.
func (in *NamespaceOffloadingStatus) DeepCopy() *NamespaceOffloadingStatus {
	if in == nil {
		return nil
	}
	out := new(NamespaceOffloadingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemoteNamespaceCondition) DeepCopyInto(out *RemoteNamespaceCondition) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteNamespaceCondition.
func (in *RemoteNamespaceCondition) DeepCopy() *RemoteNamespaceCondition {
	if in == nil {
		return nil
	}
	out := new(RemoteNamespaceCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in RemoteNamespaceConditions) DeepCopyInto(out *RemoteNamespaceConditions) {
	{
		in := &in
		*out = make(RemoteNamespaceConditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemoteNamespaceConditions.
func (in RemoteNamespaceConditions) DeepCopy() RemoteNamespaceConditions {
	if in == nil {
		return nil
	}
	out := new(RemoteNamespaceConditions)
	in.DeepCopyInto(out)
	return *out
}
