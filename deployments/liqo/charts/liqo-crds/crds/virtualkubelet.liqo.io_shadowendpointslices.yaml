---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: shadowendpointslices.virtualkubelet.liqo.io
spec:
  group: virtualkubelet.liqo.io
  names:
    kind: ShadowEndpointSlice
    listKind: ShadowEndpointSliceList
    plural: shadowendpointslices
    singular: shadowendpointslice
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ShadowEndpointSlice is the Schema for the ShadowEndpointSlices
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ShadowEndpointSliceSpec defines the desired state of ShadowEndpointSlice.
            properties:
              template:
                description: EndpointSliceTemplate defines the desired state of the
                  EndpointSlice.
                properties:
                  addressType:
                    description: AddressType represents the type of address referred
                      to by an endpoint.
                    type: string
                  endpoints:
                    items:
                      description: Endpoint represents a single logical "backend"
                        implementing a service.
                      properties:
                        addresses:
                          description: 'addresses of this endpoint. The contents of
                            this field are interpreted according to the corresponding
                            EndpointSlice addressType field. Consumers must handle
                            different types of addresses in the context of their own
                            capabilities. This must contain at least one address but
                            no more than 100. These are all assumed to be fungible
                            and clients may choose to only use the first element.
                            Refer to: https://issue.k8s.io/106267'
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        conditions:
                          description: conditions contains information about the current
                            status of the endpoint.
                          properties:
                            ready:
                              description: ready indicates that this endpoint is prepared
                                to receive traffic, according to whatever system is
                                managing the endpoint. A nil value indicates an unknown
                                state. In most cases consumers should interpret this
                                unknown state as ready. For compatibility reasons,
                                ready should never be "true" for terminating endpoints,
                                except when the normal readiness behavior is being
                                explicitly overridden, for example when the associated
                                Service has set the publishNotReadyAddresses flag.
                              type: boolean
                            serving:
                              description: serving is identical to ready except that
                                it is set regardless of the terminating state of endpoints.
                                This condition should be set to true for a ready endpoint
                                that is terminating. If nil, consumers should defer
                                to the ready condition.
                              type: boolean
                            terminating:
                              description: terminating indicates that this endpoint
                                is terminating. A nil value indicates an unknown state.
                                Consumers should interpret this unknown state to mean
                                that the endpoint is not terminating.
                              type: boolean
                          type: object
                        deprecatedTopology:
                          additionalProperties:
                            type: string
                          description: deprecatedTopology contains topology information
                            part of the v1beta1 API. This field is deprecated, and
                            will be removed when the v1beta1 API is removed (no sooner
                            than kubernetes v1.24).  While this field can hold values,
                            it is not writable through the v1 API, and any attempts
                            to write to it will be silently ignored. Topology information
                            can be found in the zone and nodeName fields instead.
                          type: object
                        hints:
                          description: hints contains information associated with
                            how an endpoint should be consumed.
                          properties:
                            forZones:
                              description: forZones indicates the zone(s) this endpoint
                                should be consumed by to enable topology aware routing.
                              items:
                                description: ForZone provides information about which
                                  zones should consume this endpoint.
                                properties:
                                  name:
                                    description: name represents the name of the zone.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                          type: object
                        hostname:
                          description: hostname of this endpoint. This field may be
                            used by consumers of endpoints to distinguish endpoints
                            from each other (e.g. in DNS names). Multiple endpoints
                            which use the same hostname should be considered fungible
                            (e.g. multiple A values in DNS). Must be lowercase and
                            pass DNS Label (RFC 1123) validation.
                          type: string
                        nodeName:
                          description: nodeName represents the name of the Node hosting
                            this endpoint. This can be used to determine endpoints
                            local to a Node.
                          type: string
                        targetRef:
                          description: targetRef is a reference to a Kubernetes object
                            that represents this endpoint.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        zone:
                          description: zone is the name of the Zone this endpoint
                            exists in.
                          type: string
                      required:
                      - addresses
                      type: object
                    type: array
                  ports:
                    items:
                      description: EndpointPort represents a Port used by an EndpointSlice
                      properties:
                        appProtocol:
                          description: "The application protocol for this port. This
                            is used as a hint for implementations to offer richer
                            behavior for protocols that they understand. This field
                            follows standard Kubernetes label syntax. Valid values
                            are either: \n * Un-prefixed protocol names - reserved
                            for IANA standard service names (as per RFC-6335 and https://www.iana.org/assignments/service-names).
                            \n * Kubernetes-defined prefixed names: * 'kubernetes.io/h2c'
                            - HTTP/2 over cleartext as described in https://www.rfc-editor.org/rfc/rfc7540
                            * 'kubernetes.io/ws'  - WebSocket over cleartext as described
                            in https://www.rfc-editor.org/rfc/rfc6455 * 'kubernetes.io/wss'
                            - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455
                            \n * Other protocols should use implementation-defined
                            prefixed names such as mycompany.com/my-custom-protocol."
                          type: string
                        name:
                          description: 'name represents the name of this port. All
                            ports in an EndpointSlice must have a unique name. If
                            the EndpointSlice is dervied from a Kubernetes service,
                            this corresponds to the Service.ports[].name. Name must
                            either be an empty string or pass DNS_LABEL validation:
                            * must be no more than 63 characters long. * must consist
                            of lower case alphanumeric characters or ''-''. * must
                            start and end with an alphanumeric character. Default
                            is empty string.'
                          type: string
                        port:
                          description: port represents the port number of the endpoint.
                            If this is not specified, ports are not restricted and
                            must be interpreted in the context of the specific consumer.
                          format: int32
                          type: integer
                        protocol:
                          default: TCP
                          description: protocol represents the IP protocol for this
                            port. Must be UDP, TCP, or SCTP. Default is TCP.
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                type: object
            type: object
        type: object
    served: true
    storage: true
