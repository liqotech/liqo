---
{{- $routeConfig := (merge (dict "name" "route" "module" "networking") .) -}}

apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    {{- include "liqo.labels" $routeConfig | nindent 4 }}
  name: {{ include "liqo.prefixedName" $routeConfig }}
spec:
  selector:
    matchLabels:
      {{- include "liqo.selectorLabels" $routeConfig | nindent 6 }}
  template:
    metadata:
    {{- if .Values.route.pod.annotations }}
      annotations:
        {{- toYaml .Values.route.pod.annotations | nindent 8 }}
    {{- end }}
      labels:
        {{- include "liqo.selectorLabels" $routeConfig | nindent 8 }}
        {{- if .Values.route.pod.labels }}
          {{- toYaml .Values.route.pod.labels | nindent 8 }}
        {{- end }}
    spec:
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300
      serviceAccountName: {{ include "liqo.prefixedName" $routeConfig }}
      containers:
        - image: {{ .Values.route.imageName }}{{ include "liqo.suffix" $routeConfig }}:{{ include "liqo.version" $routeConfig }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          name: {{ $routeConfig.name }}
          command: ["/usr/bin/liqonet"]
          args:
          - --run-as=liqo-route
          {{- if .Values.route.pod.extraArgs }}
          {{- toYaml .Values.route.pod.extraArgs | nindent 10 }}
          {{- end }}
          resources:
            requests:
              cpu: 100m
              memory: 80M
          securityContext:
            privileged: true
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_NAME
              valueFrom:
               fieldRef:
                 fieldPath: spec.nodeName
      hostNetwork: true
