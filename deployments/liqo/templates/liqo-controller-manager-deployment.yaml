---
{{- $ctrlManagerConfig := (merge (dict "name" "controller-manager" "module" "controller-manager") .) -}}
{{- $webhookConfig := (merge (dict "name" "webhook" "module" "webhook") .) -}}

{{- $vkargs := .Values.virtualKubelet.extra.args }}
{{- /* Enable the API support if not overridden by the user */ -}}
{{- if not (or (has "--enable-apiserver-support" $vkargs ) (has "--enable-apiserver-support=true" $vkargs ) (has "--enable-apiserver-support=false" $vkargs )) }}
{{- $vkargs = append $vkargs "--enable-apiserver-support=true" }}
{{- end }}
{{- /* Configure the appropriate certificate generation approach on EKS clusters, if not overridden by the user */ -}}
{{- if .Values.awsConfig.accessKeyId }}
{{- if not (or (has "--certificate-type=kubelet" $vkargs ) (has "--certificate-type=aws" $vkargs ) (has "--certificate-type=self-signed" $vkargs )) }}
{{- $vkargs = append $vkargs "--certificate-type=aws" }}
{{- end }}
{{- end }}

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "liqo.labels" $ctrlManagerConfig | nindent 4 }}
  name: {{ include "liqo.prefixedName" $ctrlManagerConfig }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      {{- include "liqo.selectorLabels" $ctrlManagerConfig | nindent 6 }}
  template:
    metadata:
    {{- if .Values.controllerManager.pod.annotations }}
      annotations:
      {{- toYaml .Values.controllerManager.pod.annotations | nindent 8 }}
    {{- end }}
      labels:
        {{- include "liqo.labels" $ctrlManagerConfig | nindent 8 }}
      {{- if .Values.controllerManager.pod.labels }}
        {{- toYaml .Values.controllerManager.pod.labels | nindent 8 }}
      {{- end }}
    spec:
      {{- if gt .Values.controllerManager.replicas 1.0 }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  {{- include "liqo.selectorLabels" $ctrlManagerConfig | nindent 18 }}
              topologyKey: kubernetes.io/hostname
      {{- end }}
      securityContext:
        {{- include "liqo.podSecurityContext" . | nindent 8 }}
      serviceAccountName: {{ include "liqo.prefixedName" $ctrlManagerConfig }}
      containers:
      - image: {{ .Values.controllerManager.imageName }}{{ include "liqo.suffix" $ctrlManagerConfig }}:{{ include "liqo.version" $ctrlManagerConfig }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        securityContext:
          {{- include "liqo.containerSecurityContext" . | nindent 10 }}
        name: {{ $ctrlManagerConfig.name }}
        command: ["/usr/bin/liqo-controller-manager"]
        args:
          - --cluster-id=$(CLUSTER_ID)
          - --cluster-name={{ .Values.discovery.config.clusterName }}
          - --liqo-namespace=$(POD_NAMESPACE)
          - --enable-incoming-peering={{ .Values.discovery.config.incomingPeeringEnabled }}
          - --resource-sharing-percentage={{ .Values.controllerManager.config.resourceSharingPercentage }}
          - --kubelet-image={{ .Values.virtualKubelet.imageName }}{{ include "liqo.suffix" $ctrlManagerConfig }}:{{ include "liqo.version" $ctrlManagerConfig }}
          - --auto-join-discovered-clusters={{ .Values.discovery.config.autojoin }}
          - --enable-storage={{ .Values.storage.enable }}
          - --webhook-port={{ .Values.webhook.port }}
          {{- if .Values.storage.enable }}
          - --virtual-storage-class-name={{ .Values.storage.virtualStorageClassName }}
          - --real-storage-class-name={{ .Values.storage.realStorageClassName }}
          - --storage-namespace={{ .Values.storage.storageNamespace }}
          {{- end }}
          {{- if .Values.controllerManager.config.enableResourceEnforcement }}
          - --enable-resource-enforcement
          {{- end }}
          {{- if .Values.virtualKubelet.extra.annotations }}
          {{- $d := dict "commandName" "--kubelet-extra-annotations" "dictionary" .Values.virtualKubelet.extra.annotations }}
          {{- include "liqo.concatenateMap" $d | nindent 10 }}
          {{- end }}
          {{- if .Values.virtualKubelet.extra.labels }}
          {{- $d := dict "commandName" "--kubelet-extra-labels" "dictionary" .Values.virtualKubelet.extra.labels }}
          {{- include "liqo.concatenateMap" $d | nindent 10 }}
          {{- end }}
          {{- if ge (len $vkargs) 1 }}
          {{- $d := dict "commandName" "--kubelet-extra-args" "list" $vkargs }}
          {{- include "liqo.concatenateList" $d | nindent 10 }}
          {{- end }}
          {{- if .Values.virtualKubelet.virtualNode.extra.annotations }}
          {{- $d := dict "commandName" "--node-extra-annotations" "dictionary" .Values.virtualKubelet.virtualNode.extra.annotations }}
          {{- include "liqo.concatenateMap" $d | nindent 10 }}
          {{- end }}
          {{- if .Values.virtualKubelet.virtualNode.extra.labels }}
          {{- $d := dict "commandName" "--node-extra-labels" "dictionary" .Values.virtualKubelet.virtualNode.extra.labels }}
          {{- include "liqo.concatenateMap" $d | nindent 10 }}
          {{- end }}
          {{- if .Values.controllerManager.pod.extraArgs }}
          {{- toYaml .Values.controllerManager.pod.extraArgs | nindent 10 }}
          {{- end }}
          {{- if .Values.discovery.config.clusterLabels }}
          {{- $d := dict "commandName" "--cluster-labels" "dictionary" .Values.discovery.config.clusterLabels }}
          {{- include "liqo.concatenateMap" $d | nindent 10 }}
          {{- end }}
          {{- if gt .Values.controllerManager.replicas 1.0 }}
          - --enable-leader-election=true
          {{- end }}
          {{- /* virtual kubelet pod containers' requests */ -}}
          {{- range $resource, $value := .Values.virtualKubelet.extra.resources.requests }}
          {{- if eq $resource "cpu" }}
          - --kubelet-cpu-requests={{ $value }}
          {{- else if eq $resource "memory" }}
          - --kubelet-ram-requests={{ $value }}
          {{- else }}
          {{ fail (printf "Unsupported resource type \"%s\" for virtual kubelet containers' requests" $resource) }}
          {{- end }}
          {{- end }}
          {{- /* virtual kubelet pod containers' limits */ -}}
          {{- range $resource, $value := .Values.virtualKubelet.extra.resources.limits }}
          {{- if eq $resource "cpu" }}
          - --kubelet-cpu-limits={{ $value }}
          {{- else if eq $resource "memory" }}
          - --kubelet-ram-limits={{ $value }}
          {{- else }}
          {{ fail (printf "Unsupported resource type \"%s\" for virtual kubelet containers' limits" $resource) }}
          {{- end }}
          {{- end }}
          {{- if .Values.controllerManager.config.resourcePluginAddress }}
          - --resource-plugin-address={{ .Values.controllerManager.config.resourcePluginAddress }}
          - --offer-update-threshold-percentage={{ .Values.controllerManager.config.offerUpdateThresholdPercentage | default 0 }}
          {{- else }}
          - --offer-update-threshold-percentage={{ .Values.controllerManager.config.offerUpdateThresholdPercentage | default 5 }}
          {{- end }}
        env:
          - name: CLUSTER_ID
            valueFrom:
              configMapKeyRef:
                name: {{ include "liqo.clusterIdConfig" . }}
                key: CLUSTER_ID
          - name: POD_NAMESPACE
            valueFrom:
             fieldRef:
               fieldPath: metadata.namespace
        resources: {{- toYaml .Values.controllerManager.pod.resources | nindent 10 }}
        volumeMounts:
          - name: webhook-certs
            mountPath: /tmp/k8s-webhook-server/serving-certs/
            readOnly: true
        ports:
        - name: webhook
          containerPort: {{ .Values.webhook.port }}
          protocol: TCP
        - name: healthz
          containerPort: 8081
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
      volumes:
      - name: webhook-certs
        secret:
          secretName: {{ include "liqo.prefixedName" $webhookConfig }}-certs
          defaultMode: 420
