---
{{- $gatewayConfig := (merge (dict "name" "legacy-gateway" "module" "networking") .) -}}

{{- if and (.Values.networking.enabled) (.Values.networking.legacy) }}

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "liqo.labels" $gatewayConfig | nindent 4 }}
  name: {{ include "liqo.prefixedName" $gatewayConfig }}
spec:
  strategy:
    type: Recreate
  replicas: {{ .Values.gateway.replicas }}
  selector:
    matchLabels:
      {{- include "liqo.selectorLabels" $gatewayConfig | nindent 6 }}
  template:
    metadata:
    {{- if .Values.gateway.pod.annotations }}
      annotations:
      {{- toYaml .Values.gateway.pod.annotations | nindent 8 }}
    {{- end }}
      labels:
        {{- include "liqo.labels" $gatewayConfig | nindent 8 }}
        {{- if .Values.gateway.pod.labels }}
          {{- toYaml .Values.gateway.pod.labels | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "liqo.prefixedName" $gatewayConfig }}
      containers:
        - image: {{ .Values.gateway.imageName }}{{ include "liqo.suffix" $gatewayConfig }}:{{ include "liqo.version" $gatewayConfig }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          name: {{ $gatewayConfig.name }}
          ports:
          - name: wireguard
            containerPort: {{ .Values.gateway.config.listeningPort }}
            protocol: UDP
          {{- if .Values.gateway.metrics.enabled }}
          - name: metrics
            containerPort: {{ .Values.gateway.metrics.port }}
            protocol: TCP
          {{- end }}
          command: ["/usr/bin/liqonet"]
          args:
          - --run-as=liqo-gateway
          {{- if gt .Values.gateway.replicas 1.0 }}
          - --gateway.leader-elect=true
          {{- end }}
          - --gateway.mtu={{ .Values.networking.mtu }}
          - --gateway.listening-port={{ .Values.gateway.config.listeningPort }}
          {{- if .Values.gateway.metrics.enabled }}
          - --metrics-bind-addr=:{{ .Values.gateway.metrics.port }}
          {{- end }}
          {{- if .Values.common.extraArgs }}
          {{- toYaml .Values.common.extraArgs | nindent 10 }}
          {{- end }}
          {{- if .Values.networking.securityMode}}
          - --gateway.security-mode={{ .Values.networking.securityMode }}
          {{- end }}
          {{- if .Values.gateway.pod.extraArgs }}
          {{- toYaml .Values.gateway.pod.extraArgs | nindent 10 }}
          {{- end }}
          resources: {{- toYaml .Values.gateway.pod.resources | nindent 12 }}
          securityContext:
            privileged: true
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: WIREGUARD_IMPLEMENTATION
              value: {{ .Values.gateway.config.wireguardImplementation }}
            - name: IPTABLES_MODE
              value: {{ .Values.networking.iptables.mode }}
      hostNetwork: true
      {{- if ((.Values.common).nodeSelector) }}
      nodeSelector:
      {{- toYaml .Values.common.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if ((.Values.common).tolerations) }}
      tolerations:
      {{- toYaml .Values.common.tolerations | nindent 8 }}
      {{- end }}
      {{- if ((.Values.common).affinity) }}
      affinity:
      {{- toYaml .Values.common.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.gateway.pod.priorityClassName }}
      priorityClassName: {{ .Values.gateway.pod.priorityClassName }}
      {{- end }}
{{- end }}
