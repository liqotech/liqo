---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: namespaceoffloadings.offloading.liqo.io
spec:
  group: offloading.liqo.io
  names:
    categories:
    - liqo
    kind: NamespaceOffloading
    listKind: NamespaceOffloadingList
    plural: namespaceoffloadings
    shortNames:
    - nsof
    singular: namespaceoffloading
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.namespaceMappingStrategy
      name: NamespaceMappingStrategy
      type: string
    - jsonPath: .spec.podOffloadingStrategy
      name: PodOffloadingStrategy
      type: string
    - jsonPath: .status.offloadingPhase
      name: OffloadingPhase
      type: string
    - jsonPath: .status.remoteNamespaceName
      name: RemoteNamespaceName
      priority: 10
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NamespaceOffloading is the Schema for the namespaceoffloadings
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NamespaceOffloadingSpec defines the desired state of NamespaceOffloading.
            properties:
              clusterSelector:
                description: ClusterSelector allows users to select a specific subset
                  of remote clusters to perform pod offloading by means of the standard
                  Kubernetes NodeSelector approach (https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity).
                  A cluster selector with no NodeSelectorTerms matches all clusters.
                properties:
                  nodeSelectorTerms:
                    description: Required. A list of node selector terms. The terms
                      are ORed.
                    items:
                      description: A null or empty node selector term matches no objects.
                        The requirements of them are ANDed. The TopologySelectorTerm
                        type implements a subset of the NodeSelectorTerm.
                      properties:
                        matchExpressions:
                          description: A list of node selector requirements by node's
                            labels.
                          items:
                            description: A node selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: The label key that the selector applies
                                  to.
                                type: string
                              operator:
                                description: Represents a key's relationship to a
                                  set of values. Valid operators are In, NotIn, Exists,
                                  DoesNotExist. Gt, and Lt.
                                type: string
                              values:
                                description: An array of string values. If the operator
                                  is In or NotIn, the values array must be non-empty.
                                  If the operator is Exists or DoesNotExist, the values
                                  array must be empty. If the operator is Gt or Lt,
                                  the values array must have a single element, which
                                  will be interpreted as an integer. This array is
                                  replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchFields:
                          description: A list of node selector requirements by node's
                            fields.
                          items:
                            description: A node selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: The label key that the selector applies
                                  to.
                                type: string
                              operator:
                                description: Represents a key's relationship to a
                                  set of values. Valid operators are In, NotIn, Exists,
                                  DoesNotExist. Gt, and Lt.
                                type: string
                              values:
                                description: An array of string values. If the operator
                                  is In or NotIn, the values array must be non-empty.
                                  If the operator is Exists or DoesNotExist, the values
                                  array must be empty. If the operator is Gt or Lt,
                                  the values array must have a single element, which
                                  will be interpreted as an integer. This array is
                                  replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                      type: object
                    type: array
                required:
                - nodeSelectorTerms
                type: object
              namespaceMappingStrategy:
                default: DefaultName
                description: 'NamespaceMappingStrategy allows users to map local and
                  remote namespace names according to two different strategies: "DefaultName",
                  which ensures uniqueness and prevents conflicts, and "EnforceSameName",
                  which enforces the same name at the cost of possible conflicts.'
                enum:
                - EnforceSameName
                - DefaultName
                type: string
              podOffloadingStrategy:
                default: LocalAndRemote
                description: 'PodOffloadingStrategy allows users to configure how
                  pods in this namespace are offloaded, according to three different
                  strategies: "Local" (i.e. no pod offloading is performed), "Remote"
                  (i.e. all pods are offloaded in remote clusters), "LocalAndRemote"
                  (i.e. no constraints are enforced besides the ones specified by
                  the ClusterSelector).'
                enum:
                - Local
                - Remote
                - LocalAndRemote
                type: string
            type: object
          status:
            description: NamespaceOffloadingStatus defines the observed state of NamespaceOffloading.
            properties:
              offloadingPhase:
                description: 'OffloadingPhase -> informs users about namespaces offloading
                  status: "Ready" (i.e. remote Namespaces have been correctly created
                  on previously selected clusters.) "NoClusterSelected" (i.e. no cluster
                  matches user constraints.) "InProgress" (i.e. remote Namespaces''
                  creation is still ongoing.) "SomeFailed" (i.e. there was an error
                  during creation of some remote Namespaces.) "AllFailed" (i.e. there
                  was an error during creation of all remote Namespaces.) "Terminating"
                  (i.e. remote namespaces are undergoing graceful termination.)'
                type: string
              remoteNamespaceName:
                description: RemoteNamespaceName is the remote namespace name chosen
                  by means of the NamespaceMappingStrategy.
                type: string
              remoteNamespacesConditions:
                additionalProperties:
                  description: RemoteNamespaceConditions list of RemoteNamespaceCondition.
                  items:
                    description: RemoteNamespaceCondition contains details about state
                      of remote namespace.
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime -> timestamp for when the
                          Namespace last transitioned from one status to another.
                        format: date-time
                        type: string
                      message:
                        description: Message -> Human-readable message indicating
                          details about the last status transition.
                        type: string
                      reason:
                        description: Reason -> Machine-readable, UpperCamelCase text
                          indicating the reason for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of remote namespace controller condition.
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
                description: RemoteNamespacesConditions -> allows user to verify remote
                  Namespaces' presence and status on all remote clusters through RemoteNamespaceCondition.
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
