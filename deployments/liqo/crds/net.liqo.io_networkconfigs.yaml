
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: networkconfigs.net.liqo.io
spec:
  group: net.liqo.io
  names:
    kind: NetworkConfig
    listKind: NetworkConfigList
    plural: networkconfigs
    singular: networkconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.clusterID
      name: Peering Cluster ID
      type: string
    - jsonPath: .spec.endpointIP
      name: Endpoint IP
      priority: 1
      type: string
    - jsonPath: .spec.backendType
      name: VPN Backend
      priority: 1
      type: string
    - jsonPath: .status.processed
      name: Processed
      type: string
    - jsonPath: .metadata.labels.liqo\.io/replication
      name: Local
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NetworkConfig is the Schema for the networkconfigs API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NetworkConfigSpec defines the desired state of NetworkConfig.
            properties:
              backend_config:
                additionalProperties:
                  type: string
                description: Connection parameters
                type: object
              backendType:
                description: Vpn technology used to interconnect two clusters.
                type: string
              clusterID:
                description: The ID of the remote cluster that will receive this CRD.
                type: string
              endpointIP:
                description: Public IP of the node where the VPN tunnel is created.
                type: string
              externalCIDR:
                description: Network used for local service endpoints.
                type: string
              podCIDR:
                description: Network used in the local cluster for the pod IPs.
                type: string
            required:
            - backendType
            - backend_config
            - clusterID
            - endpointIP
            - externalCIDR
            - podCIDR
            type: object
          status:
            description: NetworkConfigStatus defines the observed state of NetworkConfig.
            properties:
              externalCIDRNAT:
                description: The new subnet used to NAT the externalCIDR of the remote
                  cluster. The original ExternalCIDR may have been mapped to this
                  network by the remote cluster.
                type: string
              podCIDRNAT:
                description: The new subnet used to NAT the podCidr of the remote
                  cluster. The original PodCidr may have been mapped to this network
                  by the remote cluster.
                type: string
              processed:
                default: false
                description: Indicates if this network config has been processed by
                  the remote cluster.
                type: boolean
            required:
            - processed
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
