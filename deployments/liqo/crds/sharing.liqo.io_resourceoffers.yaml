---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: resourceoffers.sharing.liqo.io
spec:
  group: sharing.liqo.io
  names:
    categories:
    - liqo
    kind: ResourceOffer
    listKind: ResourceOfferList
    plural: resourceoffers
    shortNames:
    - offer
    singular: resourceoffer
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .status.virtualKubeletStatus
      name: VirtualKubeletStatus
      type: string
    - jsonPath: .metadata.labels.liqo\.io/replication
      name: Local
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ResourceOffer is the Schema for the resourceOffers API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ResourceOfferSpec defines the desired state of ResourceOffer.
            properties:
              clusterId:
                description: ClusterID is the identifier of the cluster that is sending
                  this ResourceOffer. It is the uid of the first master node in you
                  cluster.
                type: string
              images:
                description: Images is the list of the images already stored in the
                  cluster.
                items:
                  description: Describe a container image
                  properties:
                    names:
                      description: Names by which this image is known. e.g. ["k8s.gcr.io/hyperkube:v1.0.7",
                        "dockerhub.io/google_containers/hyperkube:v1.0.7"]
                      items:
                        type: string
                      type: array
                    sizeBytes:
                      description: The size of the image in bytes.
                      format: int64
                      type: integer
                  type: object
                type: array
              labels:
                additionalProperties:
                  type: string
                description: Labels contains the label to be added to the virtual
                  node.
                type: object
              prices:
                additionalProperties:
                  anyOf:
                  - type: integer
                  - type: string
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
                description: Prices contains the possible prices for every kind of
                  resource (cpu, memory, image).
                type: object
              resourceQuota:
                description: ResourceQuota contains the quantity of resources made
                  available by the cluster.
                properties:
                  hard:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'hard is the set of desired hard limits for each
                      named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/'
                    type: object
                  scopeSelector:
                    description: scopeSelector is also a collection of filters like
                      scopes that must match each object tracked by a quota but expressed
                      using ScopeSelectorOperator in combination with possible values.
                      For a resource to match, both scopes AND scopeSelector (if specified
                      in spec), must be matched.
                    properties:
                      matchExpressions:
                        description: A list of scope selector requirements by scope
                          of the resources.
                        items:
                          description: A scoped-resource selector requirement is a
                            selector that contains values, a scope name, and an operator
                            that relates the scope name and values.
                          properties:
                            operator:
                              description: Represents a scope's relationship to a
                                set of values. Valid operators are In, NotIn, Exists,
                                DoesNotExist.
                              type: string
                            scopeName:
                              description: The name of the scope that the selector
                                applies to.
                              type: string
                            values:
                              description: An array of string values. If the operator
                                is In or NotIn, the values array must be non-empty.
                                If the operator is Exists or DoesNotExist, the values
                                array must be empty. This array is replaced during
                                a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - operator
                          - scopeName
                          type: object
                        type: array
                    type: object
                  scopes:
                    description: A collection of filters that must match each object
                      tracked by a quota. If not specified, the quota matches all
                      objects.
                    items:
                      description: A ResourceQuotaScope defines a filter that must
                        match each object tracked by a quota
                      type: string
                    type: array
                type: object
              storageClasses:
                description: StorageClasses contains the list of the storage classes
                  offered by the cluster.
                items:
                  description: StorageType defines the type of storage offered by
                    a resource offer.
                  properties:
                    default:
                      description: Default indicates whether this storage class is
                        the default storage class for Liqo.
                      type: boolean
                    storageClassName:
                      description: StorageClassName indicates the name of the storage
                        class.
                      type: string
                  required:
                  - storageClassName
                  type: object
                type: array
              withdrawalTimestamp:
                description: WithdrawalTimestamp is set when a graceful deletion is
                  requested by the user.
                format: date-time
                type: string
            required:
            - clusterId
            type: object
          status:
            description: ResourceOfferStatus defines the observed state of ResourceOffer.
            properties:
              phase:
                default: Pending
                description: Phase is the status of this ResourceOffer. When the offer
                  is created it is checked by the operator, which sets this field
                  to "Accepted" or "Refused" on tha base of cluster configuration.
                  If the ResourceOffer is accepted a virtual-kubelet for the foreign
                  cluster will be created.
                enum:
                - Pending
                - ManualActionRequired
                - Accepted
                - Refused
                type: string
              virtualKubeletStatus:
                default: None
                description: VirtualKubeletStatus indicates if the virtual-kubelet
                  for this ResourceOffer has been created or not.
                enum:
                - None
                - Created
                - Deleting
                type: string
            required:
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
