
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.2
  creationTimestamp: null
  name: clusterconfigs.config.liqo.io
spec:
  group: config.liqo.io
  names:
    kind: ClusterConfig
    listKind: ClusterConfigList
    plural: clusterconfigs
    singular: clusterconfig
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterConfig is the Schema for the clusterconfigs API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterConfigSpec defines the desired state of ClusterConfig.
            properties:
              discoveryConfig:
                description: DiscoveryConfig defines the configuration of the Discovery
                  logic.
                properties:
                  authService:
                    default: _liqo_auth._tcp
                    type: string
                  authServiceAddress:
                    type: string
                  authServicePort:
                    type: string
                  autojoin:
                    type: boolean
                  clusterLabels:
                    additionalProperties:
                      type: string
                    description: ClusterLabels is a set of labels which characterizes
                      the local cluster when exposed remotely as a virtual node.
                    type: object
                  clusterName:
                    description: ClusterName is a nickname for your cluster that can
                      be easily understood by a user
                    type: string
                  domain:
                    type: string
                  enableAdvertisement:
                    type: boolean
                  enableDiscovery:
                    type: boolean
                  incomingPeeringEnabled:
                    description: Allow (by default) the remote clusters to establish
                      a peering with our cluster.
                    type: boolean
                  name:
                    type: string
                  port:
                    maximum: 65355
                    minimum: 1
                    type: integer
                  service:
                    type: string
                  ttl:
                    format: int32
                    minimum: 30
                    type: integer
                required:
                - autojoin
                - domain
                - enableAdvertisement
                - enableDiscovery
                - name
                - port
                - service
                - ttl
                type: object
              resourceSharingConfig:
                description: AdvertisementConfig defines the configuration for the
                  advertisement protocol.
                properties:
                  ingoingConfig:
                    description: IngoingConfig defines the behavior for the acceptance
                      of Advertisements from other clusters.
                    properties:
                      acceptPolicy:
                        description: AcceptPolicy defines the policy to accept/refuse
                          an Advertisement. Possible values are AutoAcceptMax and
                          Manual. AutoAcceptMax means all the Advertisement received
                          will be accepted until the MaxAcceptableAdvertisement limit
                          is reached; Manual means every Advertisement received will
                          need a manual accept/refuse, which can be done by updating
                          its status.
                        enum:
                        - AutoAcceptMax
                        - Manual
                        type: string
                      maxAcceptableAdvertisement:
                        description: MaxAcceptableAdvertisement defines the maximum
                          number of Advertisements that can be accepted over time.
                          The maximum value for this field is set to 1000000, a symbolic
                          value that implements the AcceptAll policy.
                        format: int32
                        maximum: 1000000
                        minimum: 0
                        type: integer
                    required:
                    - acceptPolicy
                    - maxAcceptableAdvertisement
                    type: object
                  keepaliveRetryTime:
                    description: After establishing a sharing with a foreign cluster,
                      a keepalive mechanism starts, in order to know if the foreign
                      cluster is reachable or not. KeepaliveRetryTime defines the
                      time between an attempt to contact the foreign cluster and the
                      next one.
                    format: int32
                    minimum: 0
                    type: integer
                  keepaliveThreshold:
                    description: KeepaliveThreshold defines the number of failed attempts
                      to contact the foreign cluster your cluster will tolerate before
                      deleting it.
                    format: int32
                    minimum: 0
                    type: integer
                  labelPolicies:
                    description: LabelPolicies contains the policies for each label
                      to be added to remote virtual nodes.
                    items:
                      description: LabelPolicy define a key-value structure to indicate
                        which keys have to be aggregated and with which policy.
                      properties:
                        key:
                          description: Label Key to be aggregated in new virtual nodes
                          type: string
                        policy:
                          default: LabelPolicyAnyTrue
                          description: Merge labels Policy
                          enum:
                          - LabelPolicyAnyTrue
                          - LabelPolicyAllTrue
                          - LabelPolicyAnyTrueNoLabelIfFalse
                          - LabelPolicyAllTrueNoLabelIfFalse
                          type: string
                      required:
                      - key
                      type: object
                    type: array
                  outgoingConfig:
                    description: OutgoingConfig defines the behavior for the creation
                      of Advertisements on other clusters.
                    properties:
                      resourceSharingPercentage:
                        description: ResourceSharingPercentage defines the percentage
                          of your cluster resources that you will share with foreign
                          clusters.
                        format: int32
                        maximum: 100
                        minimum: 0
                        type: integer
                    required:
                    - resourceSharingPercentage
                    type: object
                required:
                - outgoingConfig
                type: object
            required:
            - discoveryConfig
            - resourceSharingConfig
            type: object
          status:
            description: ClusterConfigStatus defines the observed state of ClusterConfig.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
