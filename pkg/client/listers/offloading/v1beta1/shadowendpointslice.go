// Copyright 2019-2024 The Liqo Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"

	v1beta1 "github.com/liqotech/liqo/apis/offloading/v1beta1"
)

// ShadowEndpointSliceLister helps list ShadowEndpointSlices.
// All objects returned here must be treated as read-only.
type ShadowEndpointSliceLister interface {
	// List lists all ShadowEndpointSlices in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.ShadowEndpointSlice, err error)
	// ShadowEndpointSlices returns an object that can list and get ShadowEndpointSlices.
	ShadowEndpointSlices(namespace string) ShadowEndpointSliceNamespaceLister
	ShadowEndpointSliceListerExpansion
}

// shadowEndpointSliceLister implements the ShadowEndpointSliceLister interface.
type shadowEndpointSliceLister struct {
	listers.ResourceIndexer[*v1beta1.ShadowEndpointSlice]
}

// NewShadowEndpointSliceLister returns a new ShadowEndpointSliceLister.
func NewShadowEndpointSliceLister(indexer cache.Indexer) ShadowEndpointSliceLister {
	return &shadowEndpointSliceLister{listers.New[*v1beta1.ShadowEndpointSlice](indexer, v1beta1.Resource("shadowendpointslice"))}
}

// ShadowEndpointSlices returns an object that can list and get ShadowEndpointSlices.
func (s *shadowEndpointSliceLister) ShadowEndpointSlices(namespace string) ShadowEndpointSliceNamespaceLister {
	return shadowEndpointSliceNamespaceLister{listers.NewNamespaced[*v1beta1.ShadowEndpointSlice](s.ResourceIndexer, namespace)}
}

// ShadowEndpointSliceNamespaceLister helps list and get ShadowEndpointSlices.
// All objects returned here must be treated as read-only.
type ShadowEndpointSliceNamespaceLister interface {
	// List lists all ShadowEndpointSlices in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.ShadowEndpointSlice, err error)
	// Get retrieves the ShadowEndpointSlice from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1beta1.ShadowEndpointSlice, error)
	ShadowEndpointSliceNamespaceListerExpansion
}

// shadowEndpointSliceNamespaceLister implements the ShadowEndpointSliceNamespaceLister
// interface.
type shadowEndpointSliceNamespaceLister struct {
	listers.ResourceIndexer[*v1beta1.ShadowEndpointSlice]
}
